% kubectl, kubernetes, k, k8s

#alias k="kubectl"

##############
##Apply
##############

# Apply
k apply -f <spec.yml> --record

##############
##Certificate
##############

# Approve a certificate signing request. CSR.
k certificate approve <csr_name>

##############
##Create
##############

# Create resources / pod described in .yml
k create -f <file.yml>

# Create a new ClusterIP service
k create service clusterip <svc_name> --tcp=<port>:<targetPort>

# Create a blueprint template for service
k create service <svc_type> <svc_name> --tcp=<port>:<targetPort> --dry-run=client -o yaml > <file_name>.yaml

# Create a blueprint template for deployment
k create deployment <d_name> --image=<name>:<version_optional> --port=<port> --replicas=<how_many> --dry-run=client -o yaml > <file_name>.yaml

# Create a blueprint template for ingress
k create ingress <name> --rule=host/path=service:port --dry-run=client -o yaml > <file_name>.yaml

##############
##Delete
##############

# Delete/remove any resources
k delete -f <spec.yml>

# Delete service
k delete svc <name>

# Delete pod
k delete pod <name>

##############
##Describe
##############

# Describe. Get all information about pod
k describe pod <name>

# Describe service
k describe svc <name>

##############
##Exec
##############

# Execute command. Optionally selecting container
k exec <pod_name> --container <cont_name> -- <command>

# Go inside pod. Go inside container
k exec -it <pod_name> --container <cont_name> -- bash

##############
##Get
##############

# List/get all nodes
k get nodes -o wide

# Watch nodes continuously
k get nodes -w

# List/get all namespaces
k get all --all-namespaces

# List/get all resources
k get all -o wide --show-labels

# Get/list deployed resources based on specification
k get -f <spec.yml> -o wide --show-labels

# List/get all ReplicaSets
k get rs -o wide --show-labels

# List/get service
k get svc -o wide --show-labels

# List/get ingress
k get ing

# List/get deployments
k get deployments -o wide --show-labels

# List all pods
k get pods -n <namespace_name> -o wide --show-labels

# List/get all information about pods
k get pods -o yaml

# List/get pods behind the service
k get ep <service_name> -o yaml --show-labels

# List / get / retrieve containers names within a pod
k get -f <pod_specification.yml> -o jsonpath='{.spec.containers[*].name}'

# List namespaces
k get ns

# List / get endpoints
k get ep --show-labels

# List / get / retrieve the whole config file
k get <k8s_component> <name> -o yaml

# Filter by label
k get <k8s_component> -l <key_eq_value>

# List certificate signing requests. CSR.
k get csr

##############
##Logs
##############

# Get logs from the pod. Optionally container
k logs --follow <pod_name> --container <container_name>

# Get logs from pod replicas by label
k logs -l <key_eq_value>

##############
##Rollout
##############

# Roll back to previous release
k rollout undo -f <spec.yml>

# Get roll out history
k rollout history -f <spec.yml>

# Check roll out status
k rollout status -f <spec.yml>

##############
##Run
##############

# Launch a pod
k run <name> --image=<image_name>

# Create a blueprint template for pod
k run <name> --image=<name>:<version_optional> --labels="key=value, key=value" --dry-run=client -o yaml > <file_name>.yml

##############
##Scale
##############

# Scale deployment
k scale deployment <name> --replicas <how_many> --record

##############
##Version
##############

# Get version information
k version --output=yaml