% git

# Checkout remote branch locally
git checkout --track origin/<branch_name>

# Update submodules.
git submodule update --init --recursive

# Eneble help store. Init credentials once.
git config --global credential.helper store

# Clone a git repository
git clone -b <branch_name> <repository> <clone_directory>

# View all available remote for a git repository
git remote --verbose

# Adds a remote for a git repository
git remote add <remote_name> <remote_url>

# Renames a remote for a git repository
git remote rename <old_remote_name> <new_remote_name>

# Remove a remote for a git repository
git remote remove <remote_name>

# Pushes committed changes to remote repository
git push -u <remote_name> <branch_name>

# Pushes changes to a remote repository overwriting another branch
git push <remote_name> <branch>:<branch_to_overwrite>

# Overwrites remote branch with local branch changes
git push <remote_name> <branch_name> -f

# Pulls changes to a remote repo to the local repo
git pull --ff-only

# Abort the current conflict resolution process, and try to reconstruct the pre-merge state.
git merge --abort

# Displays formatted log of commits for a repo
git log --all --decorate --oneline --graph

# Clear everything
git clean -dxf

# See all open pull requests of a user on Github
url::open 'https://github.com/pulls?&q=author:<user>+is:open+is:pr'

$ branch: git branch | awk '{print $NF}'
